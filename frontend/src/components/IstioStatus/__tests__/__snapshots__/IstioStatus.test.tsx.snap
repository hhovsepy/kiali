// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`When addon component has a problem the Icon shows is displayed in orange 1`] = `
<Tooltip
  content={
    <React.Fragment>
      <TextContent
        style={
          Object {
            "color": "var(--pf-v5-global--palette--white)",
          }
        }
      >
        <Text
          component="h4"
        >
          Cluster Status
        </Text>
        <React.Fragment>
          <div
            className="kiali_f8qnpeg"
          >
            <PFBadge
              badge={
                Object {
                  "badge": "C",
                  "style": Object {
                    "backgroundColor": "var(--pf-v5-global--palette--blue-300)",
                  },
                  "tt": "Cluster",
                }
              }
              size="sm"
            />
            Kubernetes
          </div>
          <IstioStatusList
            cluster="Kubernetes"
            status={
              Array [
                Object {
                  "cluster": "Kubernetes",
                  "is_core": false,
                  "name": "grafana",
                  "status": "Unhealthy",
                },
                Object {
                  "cluster": "Kubernetes",
                  "is_core": true,
                  "name": "istio-egressgateway",
                  "status": "Healthy",
                },
              ]
            }
          />
        </React.Fragment>
      </TextContent>
    </React.Fragment>
  }
  enableFlip={true}
  maxWidth="25rem"
  position="top"
>
  <Icon
    className="kiali_f1wuoq20 kiali_frkkrth"
    data-test="istio-status-warning"
  >
    <ResourcesFullIcon />
  </Icon>
</Tooltip>
`;

exports[`When both core and addon component have problems any component is in not ready the Icon shows is displayed in red 1`] = `
<Tooltip
  content={
    <React.Fragment>
      <TextContent
        style={
          Object {
            "color": "var(--pf-v5-global--palette--white)",
          }
        }
      >
        <Text
          component="h4"
        >
          Cluster Status
        </Text>
        <React.Fragment>
          <div
            className="kiali_f8qnpeg"
          >
            <PFBadge
              badge={
                Object {
                  "badge": "C",
                  "style": Object {
                    "backgroundColor": "var(--pf-v5-global--palette--blue-300)",
                  },
                  "tt": "Cluster",
                }
              }
              size="sm"
            />
            Kubernetes
          </div>
          <IstioStatusList
            cluster="Kubernetes"
            status={
              Array [
                Object {
                  "cluster": "Kubernetes",
                  "is_core": false,
                  "name": "grafana",
                  "status": "Unhealthy",
                },
                Object {
                  "cluster": "Kubernetes",
                  "is_core": true,
                  "name": "istio-egressgateway",
                  "status": "Unhealthy",
                },
              ]
            }
          />
        </React.Fragment>
      </TextContent>
    </React.Fragment>
  }
  enableFlip={true}
  maxWidth="25rem"
  position="top"
>
  <Icon
    className="kiali_f1wuoq20 kiali_f1h37jb8"
    data-test="istio-status-danger"
  >
    <ResourcesFullIcon />
  </Icon>
</Tooltip>
`;

exports[`When core component has a problem the Icon shows is displayed in Red 1`] = `
<Tooltip
  content={
    <React.Fragment>
      <TextContent
        style={
          Object {
            "color": "var(--pf-v5-global--palette--white)",
          }
        }
      >
        <Text
          component="h4"
        >
          Cluster Status
        </Text>
        <React.Fragment>
          <div
            className="kiali_f8qnpeg"
          >
            <PFBadge
              badge={
                Object {
                  "badge": "C",
                  "style": Object {
                    "backgroundColor": "var(--pf-v5-global--palette--blue-300)",
                  },
                  "tt": "Cluster",
                }
              }
              size="sm"
            />
            Kubernetes
          </div>
          <IstioStatusList
            cluster="Kubernetes"
            status={
              Array [
                Object {
                  "cluster": "Kubernetes",
                  "is_core": false,
                  "name": "grafana",
                  "status": "Healthy",
                },
                Object {
                  "cluster": "Kubernetes",
                  "is_core": true,
                  "name": "istio-egressgateway",
                  "status": "Unhealthy",
                },
              ]
            }
          />
        </React.Fragment>
      </TextContent>
    </React.Fragment>
  }
  enableFlip={true}
  maxWidth="25rem"
  position="top"
>
  <Icon
    className="kiali_f1wuoq20 kiali_f1h37jb8"
    data-test="istio-status-danger"
  >
    <ResourcesFullIcon />
  </Icon>
</Tooltip>
`;

exports[`When there are not-ready components mixed with other not healthy components in addons the Icon is displayed in orange 1`] = `
<Tooltip
  content={
    <React.Fragment>
      <TextContent
        style={
          Object {
            "color": "var(--pf-v5-global--palette--white)",
          }
        }
      >
        <Text
          component="h4"
        >
          Cluster Status
        </Text>
        <React.Fragment>
          <div
            className="kiali_f8qnpeg"
          >
            <PFBadge
              badge={
                Object {
                  "badge": "C",
                  "style": Object {
                    "backgroundColor": "var(--pf-v5-global--palette--blue-300)",
                  },
                  "tt": "Cluster",
                }
              }
              size="sm"
            />
            Kubernetes
          </div>
          <IstioStatusList
            cluster="Kubernetes"
            status={
              Array [
                Object {
                  "cluster": "Kubernetes",
                  "is_core": false,
                  "name": "grafana",
                  "status": "Unhealthy",
                },
                Object {
                  "cluster": "Kubernetes",
                  "is_core": false,
                  "name": "jaeger",
                  "status": "NotReady",
                },
              ]
            }
          />
        </React.Fragment>
      </TextContent>
    </React.Fragment>
  }
  enableFlip={true}
  maxWidth="25rem"
  position="top"
>
  <Icon
    className="kiali_f1wuoq20 kiali_frkkrth"
    data-test="istio-status-warning"
  >
    <ResourcesFullIcon />
  </Icon>
</Tooltip>
`;

exports[`When there are not-ready components mixed with other not healthy components in both the Icon shows is displayed in red 1`] = `
<Tooltip
  content={
    <React.Fragment>
      <TextContent
        style={
          Object {
            "color": "var(--pf-v5-global--palette--white)",
          }
        }
      >
        <Text
          component="h4"
        >
          Cluster Status
        </Text>
        <React.Fragment>
          <div
            className="kiali_f8qnpeg"
          >
            <PFBadge
              badge={
                Object {
                  "badge": "C",
                  "style": Object {
                    "backgroundColor": "var(--pf-v5-global--palette--blue-300)",
                  },
                  "tt": "Cluster",
                }
              }
              size="sm"
            />
            Kubernetes
          </div>
          <IstioStatusList
            cluster="Kubernetes"
            status={
              Array [
                Object {
                  "cluster": "Kubernetes",
                  "is_core": false,
                  "name": "grafana",
                  "status": "Unhealthy",
                },
                Object {
                  "cluster": "Kubernetes",
                  "is_core": false,
                  "name": "jaeger",
                  "status": "NotReady",
                },
                Object {
                  "cluster": "Kubernetes",
                  "is_core": true,
                  "name": "istio-egressgateway",
                  "status": "Unhealthy",
                },
                Object {
                  "cluster": "Kubernetes",
                  "is_core": true,
                  "name": "istio-ingressgateway",
                  "status": "NotReady",
                },
              ]
            }
          />
        </React.Fragment>
      </TextContent>
    </React.Fragment>
  }
  enableFlip={true}
  maxWidth="25rem"
  position="top"
>
  <Icon
    className="kiali_f1wuoq20 kiali_f1h37jb8"
    data-test="istio-status-danger"
  >
    <ResourcesFullIcon />
  </Icon>
</Tooltip>
`;

exports[`When there are not-ready components mixed with other not healthy components in core the Icon is displayed in red 1`] = `
<Tooltip
  content={
    <React.Fragment>
      <TextContent
        style={
          Object {
            "color": "var(--pf-v5-global--palette--white)",
          }
        }
      >
        <Text
          component="h4"
        >
          Cluster Status
        </Text>
        <React.Fragment>
          <div
            className="kiali_f8qnpeg"
          >
            <PFBadge
              badge={
                Object {
                  "badge": "C",
                  "style": Object {
                    "backgroundColor": "var(--pf-v5-global--palette--blue-300)",
                  },
                  "tt": "Cluster",
                }
              }
              size="sm"
            />
            Kubernetes
          </div>
          <IstioStatusList
            cluster="Kubernetes"
            status={
              Array [
                Object {
                  "cluster": "Kubernetes",
                  "is_core": true,
                  "name": "istio-egressgateway",
                  "status": "Unhealthy",
                },
                Object {
                  "cluster": "Kubernetes",
                  "is_core": true,
                  "name": "istio-ingressgateway",
                  "status": "NotReady",
                },
              ]
            }
          />
        </React.Fragment>
      </TextContent>
    </React.Fragment>
  }
  enableFlip={true}
  maxWidth="25rem"
  position="top"
>
  <Icon
    className="kiali_f1wuoq20 kiali_f1h37jb8"
    data-test="istio-status-danger"
  >
    <ResourcesFullIcon />
  </Icon>
</Tooltip>
`;

exports[`When there are not-ready components not mixed with other unhealthy components in addons renders the Icon in blue 1`] = `
<Tooltip
  content={
    <React.Fragment>
      <TextContent
        style={
          Object {
            "color": "var(--pf-v5-global--palette--white)",
          }
        }
      >
        <Text
          component="h4"
        >
          Cluster Status
        </Text>
        <React.Fragment>
          <div
            className="kiali_f8qnpeg"
          >
            <PFBadge
              badge={
                Object {
                  "badge": "C",
                  "style": Object {
                    "backgroundColor": "var(--pf-v5-global--palette--blue-300)",
                  },
                  "tt": "Cluster",
                }
              }
              size="sm"
            />
            Kubernetes
          </div>
          <IstioStatusList
            cluster="Kubernetes"
            status={
              Array [
                Object {
                  "cluster": "Kubernetes",
                  "is_core": true,
                  "name": "istiod",
                  "status": "NotReady",
                },
              ]
            }
          />
        </React.Fragment>
      </TextContent>
    </React.Fragment>
  }
  enableFlip={true}
  maxWidth="25rem"
  position="top"
>
  <Icon
    className="kiali_f1wuoq20 kiali_f1elceoh"
    data-test="istio-status-info"
  >
    <ResourcesFullIcon />
  </Icon>
</Tooltip>
`;

exports[`When there are not-ready components not mixed with other unhealthy components in core renders the Icon in blue 1`] = `
<Tooltip
  content={
    <React.Fragment>
      <TextContent
        style={
          Object {
            "color": "var(--pf-v5-global--palette--white)",
          }
        }
      >
        <Text
          component="h4"
        >
          Cluster Status
        </Text>
        <React.Fragment>
          <div
            className="kiali_f8qnpeg"
          >
            <PFBadge
              badge={
                Object {
                  "badge": "C",
                  "style": Object {
                    "backgroundColor": "var(--pf-v5-global--palette--blue-300)",
                  },
                  "tt": "Cluster",
                }
              }
              size="sm"
            />
            Kubernetes
          </div>
          <IstioStatusList
            cluster="Kubernetes"
            status={
              Array [
                Object {
                  "cluster": "Kubernetes",
                  "is_core": false,
                  "name": "jaeger",
                  "status": "NotReady",
                },
              ]
            }
          />
        </React.Fragment>
      </TextContent>
    </React.Fragment>
  }
  enableFlip={true}
  maxWidth="25rem"
  position="top"
>
  <Icon
    className="kiali_f1wuoq20 kiali_f1elceoh"
    data-test="istio-status-info"
  >
    <ResourcesFullIcon />
  </Icon>
</Tooltip>
`;
